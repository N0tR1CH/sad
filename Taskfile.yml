version: "3"

tasks:
  build:
    summary: |
      Builds share and discuss app to an executable

      It gets main.go file and runs go build utility to build an executable that can be deployed.
    dir: "./cmd/api"
    cmds:
      - task: build-css
      - task: gen-templ
      - task: bundle-js
      - cmd: echo "Building..."
        silent: true
      - go build -o ../../bin/sad-app

  clean:
    summary: |
      Deletes sad-app executable
    dir: "./bin"
    cmds:
      - cmd: echo "Deleting sad-app executable..."
        silent: true
      - rm sad-app

  watch:
    deps: [kill-watch]
    summary: |
      It runs overmind process manager
    cmds:
      - cmd: echo "Hot reloading starting..."
        silent: true
      - overmind s -f ./Procfile.dev

  kill-watch:
    summary: |
      Process has tendency to stuck

      It finds the port that app uses and closes it.
    cmds:
      - cmd: echo "Killing air..."
        silent: true
      - lsof -t -i :4000 | xargs kill -9

  gen-templ:
    summary: |
      It generates templ go file

      It runs templ utility to generate go functions based on templ files.
    cmds:
      - cmd: echo "Running templ generate..."
        silent: true
      - templ generate

  ##############################ASSETS##########################################

  build-css:
    summary: |
      Builds share and discuss app to an executable

      It gets main.go file and runs go build utility to build an executable that can be deployed.
    cmds:
      - cmd: echo "Building minified css..."
        silent: true
      - tailwindcss -i ./scripts/input.css -o ./cmd/web/assets/css/output.css --minify

  watch-css:
    summary: |
      Builds share and discuss app to an executable

      It gets main.go file and runs go build utility to build an executable that can be deployed.
    cmds:
      - cmd: echo "Watching css..."
        silent: true
      - tailwindcss -i ./scripts/input.css -o ./cmd/web/assets/css/output.css --watch --minify

  bundle-js:
    summary: |
      Builds bundled javascript file with esbuild

      It gets src typescript files to produce bundled js sent to the client.
    dir: "./scripts"
    cmds:
      - cmd: echo "Bundling JS"
        silent: true
      - pnpm run build

  watch-js:
    dir: "./scripts"
    cmds:
      - cmd: echo "Watching JS"
        silent: true
      - pnpm run dev

  enable-hr:
    summary: |
      It runs websocket server that hot reloads the application.
    dir: "./scripts/hot_reload"
    cmds:
      - pnpx nodemon --ext go,css --watch ../../views --watch ../../cmd/web/assets/css/output.css hot_reload.mjs

  ##############################MIGRATIONS########################################

  migrate-create-*:
    vars:
      MIGRATION_NAME: "{{index .MATCH 0}}"
    prompt: This action will create migration files. Do you want to continue?
    summary: |
      Create migration with predefined settings

      It gets name and create up and down sql migration files.
    dir: "./migrations"
    cmds:
      - migrate create -seq -ext=.sql {{.MIGRATION_NAME}}

  migrate-up:
    prompt: This action will apply current migration files. Do you want to continue?
    cmds:
      - migrate -path=./migrations -database=$(cat .env/development/database | tail -n1 | cut -d"=" -f2-3) up

  migrate-down:
    prompt: This action will execute current migration down files. Do you want to continue?
    cmds:
      - migrate -path=./migrations -database=$(cat .env/development/database | tail -n1 | cut -d"=" -f2-3) down

  show-migration-version:
    summary: |
      Shows current migration version
    cmds:
      - migrate -path=./migrations -database=$(cat .env/development/database | tail -n1 | cut -d"=" -f2-3) version

  migrate-up-to-*:
    vars:
      MIGRATION_VERSION: "{{index .MATCH 0}}"
    summary: |
      Migrate up to specific version
    cmds:
      - migrate -path=./migrations -database=$(cat .env/development/database | tail -n1 | cut -d"=" -f2-3) goto {{.MIGRATION_VERSION}}

  migrate-down-by-*:
    vars:
      MIGRATIONS_COUNT: "{{ index .MATCH 0}}"
    summary: |
      Migrate down by specific number of migrations
    cmds:
      - migrate -path=./migrations -database=$(cat .env/development/database | tail -n1 | cut -d"=" -f2-3) down {{ .MIGRATIONS_COUNT }}

  ##############################OVERMIND########################################
  overmind:
    cmds:
      - overmind start -f Procfile.dev

